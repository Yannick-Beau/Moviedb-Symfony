# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    # @link https://symfony.com/doc/current/configuration.html#configuration-based-on-environment-variables
    # @link https://symfony.com/doc/current/configuration/env_var_processors.html

    # On crée ces paramètres de services que si on a besoin de les réutiliser :
    # - Dans une autre configuration .yaml du dossier config
    # - Dans notre code source
    app.message_generator_is_random: '%env(bool:MESSAGE_GENERATOR_IS_RANDOM)%'
    app.slugger_to_lower: '%env(bool:SLUGGER_TO_LOWER)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # Configuration de notre service MessageGenerator
    App\Service\MessageGenerator:
        # Arguments à transmettre au constructeur
        arguments:
            # on fait appel à un paramètre de service
            $isRandom: '%app.message_generator_is_random%'

    # Configuration de notre service MySlugger
    App\Service\MySlugger:
        # Arguments à transmettre au constructeur
        arguments:
            # on fait appel à un paramètre de service
            $toLower: '%app.slugger_to_lower%'

             # Configuration de notre écouteur sur l'entité Movie
    App\EventListener\MovieListener:
        tags:
            -
                # Ces 3 options sont nécessaires pour que ça fonctionne
                name: 'doctrine.orm.entity_listener'
                # Par défaut, le nom de la méthode appelée = nom de l'event
                event: 'prePersist'
                entity: 'App\Entity\Movie'
                # On peut indiquer le nom de la méthode si différente de l'event
                method: 'slugify'
            -
                # Ces 3 options sont nécessaires pour que ça fonctionne
                name: 'doctrine.orm.entity_listener'
                # Par défaut, le nom de la méthode appelée = nom de l'event
                event: 'preUpdate'
                entity: 'App\Entity\Movie'
                # On peut indiquer le nom de la méthode si différente de l'event
                method: 'slugify'